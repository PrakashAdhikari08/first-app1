{"version":3,"sources":["components/PageHeader.jsx","components/footer/Footer.jsx","components/home/Home.jsx","components/header/Header.jsx","APIs.js","components/form/AddAuthor.jsx","components/authors/SingleAuthor.jsx","components/authors/Authors.jsx","components/form/AddBooks.jsx","components/books/SingleBook.jsx","components/books/AllBooks.jsx","Routing.jsx","App.js","serviceWorker.js","index.js"],"names":["PageHeader","props","useEffect","document","title","window","scrollTo","children","Footer","className","Home","to","Header","Axios","defaults","baseURL","getAllAuthor","pageNumber","get","getAllBooksByAuthor","authorId","addBookByAuthor","data","post","addAuthor","updatePriceBook","put","bookId","price","withRouter","onSubmit","values","a","email","firstName","lastName","phone","address","then","response","history","push","error","alert","validationSchema","Yup","required","formik","useFormik","initialValues","action","handleSubmit","htmlFor","type","id","getFieldProps","touched","errors","size","style","color","name","auth","useState","authorData","setAuthorData","setPageNumber","console","log","authors","map","author","index","key","length","disabled","onClick","match","params","authorName","year","updatePr","setUpdatePr","updatePrice","b","passedFunction","d","del","delete","backgroundColor","books","setBooks","setDel","booksOfAuthor","book","Routing","Route1","Component","component","render","Route2","exact","path","AuthorPage","AddAuthor","AddBook","AllBooks","App","Boolean","location","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.dc3023fb.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nconst PageHeader = (props) => {\r\n  useEffect(() => {\r\n    document.title = `${props.title} | AuthorBook Management`;\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n  return <>{props.children}</>;\r\n};\r\n\r\nexport default PageHeader;\r\n","import React from \"react\";\r\nimport \"./MainFooter.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer_main\">\r\n      <div className=\"last_div\">\r\n        <p>All Right Reserved @AuthorBookManagement 2020</p>\r\n        <small className=\"bottom_link\">www.manageauthor.com</small>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport \"./Home.css\";\r\nimport PageHeader from \"../PageHeader\";\r\nimport Footer from \"../footer/Footer\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <PageHeader title=\"Home\">\r\n      <div className=\"home\">\r\n        <div className=\"home_btn\">\r\n          <h1>Welcome to Author Book Management System.</h1>\r\n          <h2>You can see the various books by different authors here.</h2>\r\n          <Link to=\"/authors\">\r\n            <button>\r\n              <strong>Explore Authors</strong>\r\n            </button>\r\n          </Link>\r\n          <h3>Thanks for Visiting Us.</h3>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    </PageHeader>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nimport \"./Header.css\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <div className=\"title\">\r\n        <h3>Author-Book Management </h3>\r\n      </div>\r\n      <div className=\"header_links\">\r\n        <Link to=\"/\">Home</Link>\r\n        <Link to=\"/authors\">View Authors</Link>\r\n      </div>\r\n      <div className=\"add_btn\">\r\n        <Link to=\"/author/add\">\r\n          <button>Add Author</button>\r\n        </Link>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import Axios from \"axios\";\r\nAxios.defaults.baseURL = \"https://simple-author-fullstack.herokuapp.com\";\r\n\r\nexport const getAllAuthor = (pageNumber) => {\r\n  return Axios.get(`/get-all-author/${pageNumber}`);\r\n};\r\n\r\nexport const getAllBooksByAuthor = (authorId, pageNumber) => {\r\n  return Axios.get(`/get-all-book/author/${authorId}/${pageNumber}`);\r\n};\r\n\r\nexport const addBookByAuthor = (authorId, data) => {\r\n  return Axios.post(`/add-book/author/${authorId}`, data);\r\n};\r\n\r\nexport const addAuthor = (data) => {\r\n  return Axios.post(\"/add-author\", data);\r\n};\r\n\r\nexport const deleteBook = (bookId) => {\r\n  return Axios.delete(`/delete-book/${bookId}`);\r\n};\r\n\r\nexport const updatePriceBook = (data) => {\r\n  return Axios.put(`/update-price/book/${data.bookId}?newPrice=${data.price}`);\r\n};\r\n","import React from \"react\";\r\nimport \"./Form.css\";\r\nimport PageHeader from \"../PageHeader\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { addAuthor } from \"../../APIs\";\r\n\r\nconst AddAuthor = (props) => {\r\n  const onSubmit = async (values) => {\r\n    const data = {\r\n      email: values.email,\r\n      firstName: values.firstName,\r\n      lastName: values.lastName,\r\n      phone: values.phone,\r\n      address: values.address,\r\n    };\r\n    addAuthor(data).then(\r\n      (response) => {\r\n        props.history.push(\"/authors\");\r\n      },\r\n      (error) => {\r\n        alert(\"Please Change the Email!!! Email Already Used\");\r\n      }\r\n    );\r\n  };\r\n\r\n  const initialValues = {\r\n    email: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    phone: \"\",\r\n    address: \"\",\r\n  };\r\n\r\n  const validationSchema = Yup.object({\r\n    firstName: Yup.string().required(\"Please Enter  First Name\"),\r\n    lastName: Yup.string().required(\"Please Enter  Last Name\"),\r\n    email: Yup.string()\r\n      .email(\"Invalid Email Address\")\r\n      .required(\"Email is requied\"),\r\n    phone: Yup.string().required(\"Please Enter  Mobile Number\"),\r\n    address: Yup.string().required(\"Please Enter  Address\"),\r\n  });\r\n  const formik = useFormik({\r\n    initialValues,\r\n    onSubmit,\r\n    validationSchema,\r\n  });\r\n  return (\r\n    <PageHeader title=\"Add Author\">\r\n      <div className=\"form_main\">\r\n        <form action=\"\" className=\"formRegister\" onSubmit={formik.handleSubmit}>\r\n          <div className=\"formHead\">\r\n            <br />\r\n            <strong className=\"strongMargin\">Add Author</strong>\r\n          </div>\r\n          <section>\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"firstName\"\r\n              {...formik.getFieldProps(\"firstName\")}\r\n            ></input>\r\n            {formik.touched.firstName && formik.errors.firstName ? (\r\n              <p size=\"sm\" style={{ color: \"red\" }}>\r\n                {formik.errors.firstName}\r\n              </p>\r\n            ) : null}\r\n          </section>\r\n          <section>\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"lastName\"\r\n              {...formik.getFieldProps(\"lastName\")}\r\n            ></input>\r\n            {formik.touched.lastName && formik.errors.lastName ? (\r\n              <p size=\"sm\" style={{ color: \"red\" }}>\r\n                {formik.errors.lastName}\r\n              </p>\r\n            ) : null}\r\n          </section>\r\n          <section>\r\n            <label htmlFor=\"email\">Valid Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              {...formik.getFieldProps(\"email\")}\r\n            ></input>\r\n            {formik.touched.email && formik.errors.email ? (\r\n              <p size=\"sm\" style={{ color: \"red\" }}>\r\n                {formik.errors.email}\r\n              </p>\r\n            ) : null}\r\n          </section>\r\n          <section>\r\n            <label htmlFor=\"phone\">Mobile No</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"phone\"\r\n              {...formik.getFieldProps(\"phone\")}\r\n            ></input>\r\n            {formik.touched.phone && formik.errors.phone ? (\r\n              <p size=\"sm\" style={{ color: \"red\" }}>\r\n                {formik.errors.phone}\r\n              </p>\r\n            ) : null}\r\n          </section>\r\n\r\n          <section>\r\n            <label htmlFor=\"address\">Address</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"address\"\r\n              {...formik.getFieldProps(\"address\")}\r\n            ></input>\r\n            {formik.touched.address && formik.errors.address ? (\r\n              <p size=\"sm\" style={{ color: \"red\" }}>\r\n                {formik.errors.address}\r\n              </p>\r\n            ) : null}\r\n          </section>\r\n\r\n          <section>\r\n            <button type=\"submit\">\r\n              <h4>Add</h4>\r\n            </button>\r\n            <Link to=\"/authors\">\r\n              <button className=\"cancelButton\">\r\n                <h4>Cancel</h4>\r\n              </button>\r\n            </Link>\r\n          </section>\r\n        </form>\r\n      </div>\r\n    </PageHeader>\r\n  );\r\n};\r\n\r\nexport default withRouter(AddAuthor);\r\n","import React from \"react\";\r\nimport \"./SingleAuthor.css\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nconst SingleAuthor = (props) => {\r\n  const name = props.auth.firstName + \" \" + props.auth.lastName;\r\n  return (\r\n    <div className=\"author\">\r\n      <h2>\r\n        {props.auth.firstName} {props.auth.lastName}\r\n      </h2>\r\n      <p>Email : {props.auth.email}</p>\r\n      <h6>Phone : {props.auth.phone}</h6>\r\n\r\n      <hr></hr>\r\n      <div className=\"authorDetails\">\r\n        <Link to={`/books/${name}/${props.auth.id}`}>\r\n          <button>All Books</button>\r\n        </Link>\r\n        {\"              \"}\r\n        <Link to={`/book/add/${name}/${props.auth.id}`}>\r\n          <button>Add Book</button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(SingleAuthor);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PageHeader from \"../PageHeader\";\r\nimport \"./Authors.css\";\r\nimport SingleAuthor from \"./SingleAuthor\";\r\nimport { getAllAuthor } from \"../../APIs\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst AuthorPage = (props) => {\r\n  const [authorData, setAuthorData] = useState([{}]);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  useEffect(() => {\r\n    const authors = async () => {\r\n      if (pageNumber >= 1) {\r\n        await getAllAuthor(pageNumber).then(\r\n          (response) => {\r\n            setAuthorData(response.data);\r\n          },\r\n          (error) => {\r\n            console.log(error);\r\n          }\r\n        );\r\n      }\r\n    };\r\n    authors();\r\n  }, [pageNumber]);\r\n\r\n  return (\r\n    <PageHeader title=\"Authors\">\r\n      <div className=\"authors\">\r\n        <h1>All Authors</h1>\r\n        {authorData.map((author, index) => (\r\n          <SingleAuthor key={index} auth={author} />\r\n        ))}\r\n        {authorData.length > 0 ? (\r\n          \"\"\r\n        ) : (\r\n          <>\r\n            <h1 style={{ color: \"red\" }}>No more Authors Please</h1>\r\n          </>\r\n        )}\r\n        {pageNumber < 1 ? (\r\n          \"\"\r\n        ) : (\r\n          <button\r\n            disabled={pageNumber < 1}\r\n            onClick={() => setPageNumber(pageNumber - 1)}\r\n          >\r\n            Previous\r\n          </button>\r\n        )}\r\n        {\"          \"}\r\n        {authorData.length > 0 ? (\r\n          <button onClick={() => setPageNumber(pageNumber + 1)}>Next</button>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </PageHeader>\r\n  );\r\n};\r\n\r\nexport default withRouter(AuthorPage);\r\n","import React from \"react\";\r\nimport \"./Form.css\";\r\nimport PageHeader from \"../PageHeader\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { addBookByAuthor } from \"../../APIs\";\r\n\r\nconst AddBook = (props) => {\r\n  const authorId = props.match.params.authorId;\r\n  const authorName = props.match.params.name;\r\n  const onSubmit = async (values) => {\r\n    const data = {\r\n      name: values.name,\r\n      year: values.year,\r\n      price: values.price,\r\n    };\r\n    console.log(data);\r\n    await addBookByAuthor(authorId, data).then(\r\n      (response) => {\r\n        props.history.push(`/books/${authorName}/${authorId}`);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n\r\n  const initialValues = {\r\n    name: \"\",\r\n    price: \"\",\r\n    year: \"\",\r\n  };\r\n\r\n  const validationSchema = Yup.object({\r\n    name: Yup.string().required(\"Please Enter  Book Name\"),\r\n    year: Yup.string().required(\"Please Enter   Published year\"),\r\n    price: Yup.string().required(\"Please Enter  Mobile Number\"),\r\n  });\r\n  const formik = useFormik({\r\n    initialValues,\r\n    onSubmit,\r\n    validationSchema,\r\n  });\r\n  return (\r\n    <PageHeader title=\"Add Book\">\r\n      <div className=\"form_main\">\r\n        <form action=\"\" className=\"formRegister\" onSubmit={formik.handleSubmit}>\r\n          <div className=\"formHead\">\r\n            <br />\r\n            <strong className=\"strongMargin\">Add Book</strong>\r\n          </div>\r\n          <section>\r\n            <label htmlFor=\"name\">Book Name</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              {...formik.getFieldProps(\"name\")}\r\n            ></input>\r\n            {formik.touched.name && formik.errors.name ? (\r\n              <p size=\"sm\" style={{ color: \"red\" }}>\r\n                {formik.errors.name}\r\n              </p>\r\n            ) : null}\r\n          </section>\r\n          <section>\r\n            <label htmlFor=\"year\">Year Published</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"year\"\r\n              {...formik.getFieldProps(\"year\")}\r\n            ></input>\r\n            {formik.touched.year && formik.errors.year ? (\r\n              <p size=\"sm\" style={{ color: \"red\" }}>\r\n                {formik.errors.year}\r\n              </p>\r\n            ) : null}\r\n          </section>\r\n\r\n          <section>\r\n            <label htmlFor=\"price\">Price Per Book</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"price\"\r\n              {...formik.getFieldProps(\"price\")}\r\n            ></input>\r\n            {formik.touched.price && formik.errors.price ? (\r\n              <p size=\"sm\" style={{ color: \"red\" }}>\r\n                {formik.errors.price}\r\n              </p>\r\n            ) : null}\r\n          </section>\r\n\r\n          <section>\r\n            <button type=\"submit\">\r\n              <h4>Add</h4>\r\n            </button>\r\n            <Link to=\"/authors\">\r\n              <button className=\"cancelButton\">\r\n                <h4>Cancel</h4>\r\n              </button>\r\n            </Link>\r\n          </section>\r\n        </form>\r\n      </div>\r\n    </PageHeader>\r\n  );\r\n};\r\n\r\nexport default withRouter(AddBook);\r\n","import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"./SingleBook.css\";\r\nimport { deleteBook, updatePriceBook } from \"../../APIs\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\n\r\nconst SingleBook = (props) => {\r\n  const [updatePr, setUpdatePr] = useState(false);\r\n  const updatePrice = () => {\r\n    setUpdatePr(!updatePr);\r\n  };\r\n  const onSubmit = async (values) => {\r\n    updatePrice();\r\n    const data = {\r\n      price: values.price,\r\n      bookId: props.b.id,\r\n    };\r\n    updatePriceBook(data).then(\r\n      () => {\r\n        props.passedFunction(!props.d);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n  const initialValues = {\r\n    price: \"\",\r\n  };\r\n  const validationSchema = Yup.object({\r\n    price: Yup.string().required(\"Please Enter New Price\"),\r\n  });\r\n  const formik = useFormik({\r\n    initialValues,\r\n    onSubmit,\r\n    validationSchema,\r\n  });\r\n\r\n  const del = async () => {\r\n    deleteBook(props.b.id).then(\r\n      () => {\r\n        props.passedFunction(!props.d);\r\n      },\r\n      (error) => {\r\n        console.log(\"Cannot detete Book\");\r\n      }\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"author\">\r\n      <h2>{props.b.name}</h2>\r\n      <p>Published on: {props.b.year}</p>\r\n      <h6>Price :$USD {props.b.price}</h6>\r\n\r\n      <div className=\"bookDetails\">\r\n        <form onSubmit={formik.handleSubmit}>\r\n          {updatePr ? (\r\n            <>\r\n              <section>\r\n                <label htmlFor=\"price\">New Price</label>\r\n                <input\r\n                  type=\"number\"\r\n                  id=\"price\"\r\n                  {...formik.getFieldProps(\"price\")}\r\n                ></input>\r\n                {formik.touched.price && formik.errors.price ? (\r\n                  <p size=\"sm\" style={{ color: \"red\" }}>\r\n                    {formik.errors.price}\r\n                  </p>\r\n                ) : null}\r\n              </section>\r\n              <button\r\n                style={{ backgroundColor: \"#00b2a9\" }}\r\n                type=\"submit\"\r\n                // onClick={updatePrice}\r\n              >\r\n                Submit\r\n              </button>\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </form>\r\n        {!updatePr ? (\r\n          <button style={{ backgroundColor: \"#00b2a9\" }} onClick={updatePrice}>\r\n            Update Price\r\n          </button>\r\n        ) : (\r\n          <button style={{ backgroundColor: \"#00b2a9\" }} onClick={updatePrice}>\r\n            Cancel\r\n          </button>\r\n        )}\r\n        {\"       \"}\r\n        <button onClick={del}>Remove</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(SingleBook);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PageHeader from \"../PageHeader\";\r\nimport \"./AllBooks.css\";\r\nimport SingleBook from \"./SingleBook\";\r\nimport { getAllBooksByAuthor } from \"../../APIs\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\n\r\nconst AllBooks = (props) => {\r\n  const authorId = props.match.params.authorId;\r\n  const authorName = props.match.params.name;\r\n  const [books, setBooks] = useState([{}]);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const [del, setDel] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const booksOfAuthor = async () => {\r\n      if (pageNumber >= 1) {\r\n        await getAllBooksByAuthor(authorId, pageNumber).then(\r\n          (response) => {\r\n            setBooks(response.data);\r\n          },\r\n          (error) => {\r\n            console.log(error);\r\n          }\r\n        );\r\n      }\r\n    };\r\n    booksOfAuthor();\r\n  }, [pageNumber, del]);\r\n\r\n  return (\r\n    <PageHeader title={props.match.params.name}>\r\n      <div className=\"books\">\r\n        <h1>{props.match.params.name}</h1>\r\n        <h2>Books</h2>\r\n        {books.map((book, index) => (\r\n          <SingleBook key={index} b={book} d={del} passedFunction={setDel} />\r\n        ))}\r\n\r\n        {books.length > 0 ? (\r\n          \"\"\r\n        ) : (\r\n          <>\r\n            <h1 style={{ color: \"red\" }}>No more Books Please</h1>\r\n            <h4>\r\n              <Link to=\"/authors\">Back to Authors</Link>\r\n            </h4>\r\n          </>\r\n        )}\r\n\r\n        {pageNumber < 1 ? (\r\n          \"\"\r\n        ) : (\r\n          <button\r\n            disabled={pageNumber < 1}\r\n            onClick={() => setPageNumber(pageNumber - 1)}\r\n          >\r\n            Previous\r\n          </button>\r\n        )}\r\n        {\"          \"}\r\n        <Link to={`/book/add/${authorName}/${authorId}`}>\r\n          {\" \"}\r\n          <button style={{ backgroundColor: \"#00b2a9\" }}>Add Book</button>\r\n        </Link>\r\n        {\"          \"}\r\n        {books.length > 0 ? (\r\n          <button onClick={() => setPageNumber(pageNumber + 1)}>Next</button>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </PageHeader>\r\n  );\r\n};\r\n\r\nexport default withRouter(AllBooks);\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Home from \"./components/home/Home\";\r\nimport Header from \"./components/header/Header\";\r\nimport Footer from \"./components/footer/Footer\";\r\nimport AddAuthor from \"./components/form/AddAuthor\";\r\nimport AuthorPage from \"./components/authors/Authors\";\r\nimport \"./index.css\";\r\nimport AddBook from \"./components/form/AddBooks\";\r\nimport AllBooks from \"./components/books/AllBooks\";\r\n\r\nconst Routing = (props) => {\r\n  const Route1 = ({ component: Component, ...props }) => (\r\n    <Route\r\n      {...props}\r\n      render={() => (\r\n        <>\r\n          <Component />\r\n        </>\r\n      )}\r\n    />\r\n  );\r\n\r\n  const Route2 = ({ component: Component, ...props }) => (\r\n    <Route\r\n      {...props}\r\n      render={() => (\r\n        <>\r\n          <Header />\r\n          <Component />\r\n          <Footer />\r\n        </>\r\n      )}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route1 exact path=\"/\" component={Home} />\r\n        <Route2 path=\"/authors\" component={AuthorPage} />\r\n        <Route2 path=\"/author/add\" component={AddAuthor} />\r\n        <Route2 path=\"/book/add/:name/:authorId\" component={AddBook} />\r\n        <Route2 path=\"/books/:name/:authorId\" component={AllBooks} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Routing;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Routing from \"./Routing\";\nimport \"react-app-polyfill/stable\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routing />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}